{"filter":false,"title":"backends.py","tooltip":"/accounts/backends.py","ace":{"folds":[],"scrolltop":283.609375,"scrollleft":0,"selection":{"start":{"row":48,"column":0},"end":{"row":48,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"29a4f4a3d271bf44ed39f9d7899d240981ce9c33","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":43},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":6,"column":0},"end":{"row":50,"column":23},"action":"insert","lines":["from django.contrib.auth.models import User","from django.db.models import Q","","","class CaseInsensitiveAuth:","    \"\"\"","    Authenticate a of User by using a case-insensitive query to check a","    combination of the supplied email/username and password.","    To avoid the risk of having two users with similar usernames,","    distinguished only by letter case (e.g. 'john' and 'John'), consider","    updating your User model to save usernames as lower case entries to","    the database.","    This will ensure all usernames have unique spellings, and as a result,","    our case insensitive query will return a single result only.","    \"\"\"","    def authenticate(self, username_or_email=None, password=None):","        \"\"\"","        Get an instance of User using the supplied username","        or email (case insensitive) and verify the password","        \"\"\"","        # Filter all users by searching for a match by username/ email.","        users = User.objects.filter(Q(username__iexact=username_or_email) |","                                    Q(email__iexact=username_or_email))","        if not users:","            return None","","        # Then get the first result of the query (which is your user).","        user = users[0]","        # If the password is correct, return user object","        if user.check_password(password):","            return user","","        return None","","    def get_user(self, user_id):","        \"\"\"","        Used by the Django authentication system to retrieve a User instance","        \"\"\"","        try:","            user = User.objects.get(pk=user_id)","            if user.is_active:","                return user","            return None","        except User.DoesNotExist:","            return None"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["from django.contrib.auth.models import User","","","","","",""],"id":5}],[{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"remove","lines":["s"],"id":6}],[{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"insert","lines":["s"],"id":7}],[{"start":{"row":48,"column":0},"end":{"row":84,"column":23},"action":"remove","lines":["","","","","class EmailAuth:","    \"\"\"Authenticate a user by an exact match on the email and password\"\"\"","","    def authenticate(self, username=None, password=None):","        \"\"\"","        Get an instance of `User` based off the email and verify the","        password","        \"\"\"","","        try:","            user = User.objects.get(email=username)","","            if user.check_password(password):","                return user","","            return None","        except User.DoesNotExist:","            return None","    ","    def get_user(self, user_id):","        \"\"\"","        Used by the Django authentiation system to retrieve a user instance","        \"\"\"","        ","        try:","            user = User.objects.get(pk=user_id)","","            if user.is_active:","                return user","","            return None","        except User.DoesNotExist:","            return None"],"id":8}]]},"timestamp":1571753363594}